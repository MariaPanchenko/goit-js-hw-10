{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Отримуємо посилання на елементи DOM\nconst dataPickerEl = document.querySelector('#datetime-picker');\nconst buttonEl = document.querySelector('button');\nconst deysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\n// let currentDate = new Date();\n// let selectedDate = null;\n// let deltaTime = null;\n// let intervalId = null;\n// let isValidDate = true;\n\n// Спочатку кнопка \"Start\" вимкнена\nbuttonEl.disabled = true;\n// let timerInterval;\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\n// Параметри для flatpickr\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  // Колбек, що викликається при закритті календаря\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    // Якщо вибрана дата в минулому, показуємо повідомлення про помилку\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      buttonEl.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      buttonEl.disabled = false;\n    }\n  },\n};\n\n// ініціалізація flatpickr\nflatpickr(dataPickerEl, options);\n\nbuttonEl.addEventListener('click', onClick);\n\n// Колбек для обробки події натискання на кнопку \"Start\"\n// buttonEl.addEventListener('click', () => {\n//   buttonEl.disabled = true;\n//   dataPickerEl.disabled = true;\n\nfunction onClick() {\n  if (userSelectedDate) {\n    startCountdown(userSelectedDate);\n    buttonEl.disabled = true;\n    dataPickerEl.disabled = true;\n  }\n}\n\n// Функція для запуску зворотного відліку\n\nfunction startCountdown(endDate) {\n  countdownInterval = setInterval(() => {\n    const now = new Date().getTime();\n    const timeRemaining = endDate - now;\n\n    if (timeRemaining < 0) {\n      clearInterval(countdownInterval);\n      dataPickerEl.disabled = false;\n      buttonEl.disabled = true;\n      return;\n    }\n\n    // timerInterval = setInterval(() => {\n    //   let currentDate = new Date();\n    //   const timeRemaining = userSelectedDate - currentDate;\n\n    //   if (timeRemaining <= 0) {\n    //     clearInterval(timerInterval);\n    //     dataPickerEl.disabled = false;\n    //     buttonEl.disabled = true;\n    //     updateTimerDisplay(0, 0, 0, 0);\n    //     return;\n    //   }\n    const time = convertMs(timeRemaining);\n    updateComponentsTimer(time);\n  }, 1000);\n}\n\n// Функція для конвертації мілісекунд\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Функція для оновлення відображення таймера\nfunction updateComponentsTimer({ days, hours, minutes, seconds }) {\n  deysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\n// Функція для додавання нулів до числа, якщо воно менше 10\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["dataPickerEl","buttonEl","deysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","countdownInterval","options","selectedDates","selectedDate","iziToast","flatpickr","onClick","startCountdown","endDate","now","timeRemaining","time","convertMs","updateComponentsTimer","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"0IAWA,MAAMA,EAAe,SAAS,cAAc,kBAAkB,EACxDC,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EASzDJ,EAAS,SAAW,GAEpB,IAAIK,EAAmB,KACnBC,EAAoB,KAGxB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDV,EAAS,SAAW,KAEpBK,EAAmBI,EACnBT,EAAS,SAAW,GAEvB,CACH,EAGAW,EAAUZ,EAAcQ,CAAO,EAE/BP,EAAS,iBAAiB,QAASY,CAAO,EAO1C,SAASA,GAAU,CACbP,IACFQ,EAAeR,CAAgB,EAC/BL,EAAS,SAAW,GACpBD,EAAa,SAAW,GAE5B,CAIA,SAASc,EAAeC,EAAS,CAC/BR,EAAoB,YAAY,IAAM,CACpC,MAAMS,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAgBF,EAAUC,EAEhC,GAAIC,EAAgB,EAAG,CACrB,cAAcV,CAAiB,EAC/BP,EAAa,SAAW,GACxBC,EAAS,SAAW,GACpB,MACD,CAaD,MAAMiB,EAAOC,EAAUF,CAAa,EACpCG,EAAsBF,CAAI,CAC3B,EAAE,GAAI,CACT,CAGA,SAASC,EAAUE,EAAI,CAOrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASL,EAAsB,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAChEvB,EAAO,YAAcwB,EAAeJ,CAAI,EACxCnB,EAAQ,YAAcuB,EAAeH,CAAK,EAC1CnB,EAAU,YAAcsB,EAAeF,CAAO,EAC9CnB,EAAU,YAAcqB,EAAeD,CAAO,CAChD,CAGA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}